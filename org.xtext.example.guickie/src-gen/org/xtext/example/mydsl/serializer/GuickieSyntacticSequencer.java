/*
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.example.mydsl.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.mydsl.services.GuickieGrammarAccess;

@SuppressWarnings("all")
public class GuickieSyntacticSequencer extends AbstractSyntacticSequencer {

	protected GuickieGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Button_BtnKeyword_1_0_or_ButtonKeyword_1_1;
	protected AbstractElementAlias match_Container_ColonKeyword_3_1_q;
	protected AbstractElementAlias match_Container_ContainerKeyword_1_0_or_ContainerKeyword_1_1;
	protected AbstractElementAlias match_Element_HyphenMinusGreaterThanSignKeyword_6_0_2_or_LinkKeyword_6_0_1_or_LinkToKeyword_6_0_0;
	protected AbstractElementAlias match_Element_OfTypeKeyword_4_0_or___TypeKeyword_4_1_0___ColonKeyword_4_1_1_0_or_EqualsSignKeyword_4_1_1_1__q__;
	protected AbstractElementAlias match_Element___ColonKeyword_2_0_or_EqualsSignKeyword_2_1__q;
	protected AbstractElementAlias match_GUI_ColonKeyword_1_1_q;
	protected AbstractElementAlias match_GUI_StyleKeyword_2_0_0_or_StyleKeyword_2_0_1_or_StyleKeyword_2_0_2;
	protected AbstractElementAlias match_GUI_TitleKeyword_1_0_0_or_TitleKeyword_1_0_1;
	protected AbstractElementAlias match_Grey_BlandKeyword_1_1_or_GreyKeyword_1_0;
	protected AbstractElementAlias match_Horizontal_HKeyword_1_0_or_HorizontalKeyword_1_1;
	protected AbstractElementAlias match_HyperLink_HyperlinkKeyword_1_0_or_WebpageKeyword_1_1;
	protected AbstractElementAlias match_Label_LabelKeyword_1_1_or_LblKeyword_1_0;
	protected AbstractElementAlias match_Neon_FunkyKeyword_1_1_or_NeonKeyword_1_0;
	protected AbstractElementAlias match_TextField_TextfieldKeyword_1_1_or_TfKeyword_1_0;
	protected AbstractElementAlias match_Vertical_VKeyword_1_0_or_VerticalKeyword_1_1;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (GuickieGrammarAccess) access;
		match_Button_BtnKeyword_1_0_or_ButtonKeyword_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getButtonAccess().getBtnKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getButtonAccess().getButtonKeyword_1_1()));
		match_Container_ColonKeyword_3_1_q = new TokenAlias(false, true, grammarAccess.getContainerAccess().getColonKeyword_3_1());
		match_Container_ContainerKeyword_1_0_or_ContainerKeyword_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getContainerAccess().getContainerKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getContainerAccess().getContainerKeyword_1_1()));
		match_Element_HyphenMinusGreaterThanSignKeyword_6_0_2_or_LinkKeyword_6_0_1_or_LinkToKeyword_6_0_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getElementAccess().getHyphenMinusGreaterThanSignKeyword_6_0_2()), new TokenAlias(false, false, grammarAccess.getElementAccess().getLinkKeyword_6_0_1()), new TokenAlias(false, false, grammarAccess.getElementAccess().getLinkToKeyword_6_0_0()));
		match_Element_OfTypeKeyword_4_0_or___TypeKeyword_4_1_0___ColonKeyword_4_1_1_0_or_EqualsSignKeyword_4_1_1_1__q__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getElementAccess().getTypeKeyword_4_1_0()), new AlternativeAlias(false, true, new TokenAlias(false, false, grammarAccess.getElementAccess().getColonKeyword_4_1_1_0()), new TokenAlias(false, false, grammarAccess.getElementAccess().getEqualsSignKeyword_4_1_1_1()))), new TokenAlias(false, false, grammarAccess.getElementAccess().getOfTypeKeyword_4_0()));
		match_Element___ColonKeyword_2_0_or_EqualsSignKeyword_2_1__q = new AlternativeAlias(false, true, new TokenAlias(false, false, grammarAccess.getElementAccess().getColonKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getElementAccess().getEqualsSignKeyword_2_1()));
		match_GUI_ColonKeyword_1_1_q = new TokenAlias(false, true, grammarAccess.getGUIAccess().getColonKeyword_1_1());
		match_GUI_StyleKeyword_2_0_0_or_StyleKeyword_2_0_1_or_StyleKeyword_2_0_2 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getGUIAccess().getStyleKeyword_2_0_0()), new TokenAlias(false, false, grammarAccess.getGUIAccess().getStyleKeyword_2_0_1()), new TokenAlias(false, false, grammarAccess.getGUIAccess().getStyleKeyword_2_0_2()));
		match_GUI_TitleKeyword_1_0_0_or_TitleKeyword_1_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getGUIAccess().getTitleKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getGUIAccess().getTitleKeyword_1_0_1()));
		match_Grey_BlandKeyword_1_1_or_GreyKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getGreyAccess().getBlandKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getGreyAccess().getGreyKeyword_1_0()));
		match_Horizontal_HKeyword_1_0_or_HorizontalKeyword_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHorizontalAccess().getHKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getHorizontalAccess().getHorizontalKeyword_1_1()));
		match_HyperLink_HyperlinkKeyword_1_0_or_WebpageKeyword_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHyperLinkAccess().getHyperlinkKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getHyperLinkAccess().getWebpageKeyword_1_1()));
		match_Label_LabelKeyword_1_1_or_LblKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLabelAccess().getLabelKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getLabelAccess().getLblKeyword_1_0()));
		match_Neon_FunkyKeyword_1_1_or_NeonKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getNeonAccess().getFunkyKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getNeonAccess().getNeonKeyword_1_0()));
		match_TextField_TextfieldKeyword_1_1_or_TfKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getTextFieldAccess().getTextfieldKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getTextFieldAccess().getTfKeyword_1_0()));
		match_Vertical_VKeyword_1_0_or_VerticalKeyword_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getVerticalAccess().getVKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getVerticalAccess().getVerticalKeyword_1_1()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getCLOSERule())
			return getCLOSEToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getENDRule())
			return getENDToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSTARTRule())
			return getSTARTToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal CLOSE:
	 * 	('\n')+|(';')
	 * ;
	 */
	protected String getCLOSEToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "\n";
	}
	
	/**
	 * terminal END:
	 * 	')'
	 * ;
	 */
	protected String getENDToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ")";
	}
	
	/**
	 * terminal START:
	 * 	'('
	 * ;
	 */
	protected String getSTARTToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "(";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Button_BtnKeyword_1_0_or_ButtonKeyword_1_1.equals(syntax))
				emit_Button_BtnKeyword_1_0_or_ButtonKeyword_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Container_ColonKeyword_3_1_q.equals(syntax))
				emit_Container_ColonKeyword_3_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Container_ContainerKeyword_1_0_or_ContainerKeyword_1_1.equals(syntax))
				emit_Container_ContainerKeyword_1_0_or_ContainerKeyword_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Element_HyphenMinusGreaterThanSignKeyword_6_0_2_or_LinkKeyword_6_0_1_or_LinkToKeyword_6_0_0.equals(syntax))
				emit_Element_HyphenMinusGreaterThanSignKeyword_6_0_2_or_LinkKeyword_6_0_1_or_LinkToKeyword_6_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Element_OfTypeKeyword_4_0_or___TypeKeyword_4_1_0___ColonKeyword_4_1_1_0_or_EqualsSignKeyword_4_1_1_1__q__.equals(syntax))
				emit_Element_OfTypeKeyword_4_0_or___TypeKeyword_4_1_0___ColonKeyword_4_1_1_0_or_EqualsSignKeyword_4_1_1_1__q__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Element___ColonKeyword_2_0_or_EqualsSignKeyword_2_1__q.equals(syntax))
				emit_Element___ColonKeyword_2_0_or_EqualsSignKeyword_2_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_GUI_ColonKeyword_1_1_q.equals(syntax))
				emit_GUI_ColonKeyword_1_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_GUI_StyleKeyword_2_0_0_or_StyleKeyword_2_0_1_or_StyleKeyword_2_0_2.equals(syntax))
				emit_GUI_StyleKeyword_2_0_0_or_StyleKeyword_2_0_1_or_StyleKeyword_2_0_2(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_GUI_TitleKeyword_1_0_0_or_TitleKeyword_1_0_1.equals(syntax))
				emit_GUI_TitleKeyword_1_0_0_or_TitleKeyword_1_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Grey_BlandKeyword_1_1_or_GreyKeyword_1_0.equals(syntax))
				emit_Grey_BlandKeyword_1_1_or_GreyKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Horizontal_HKeyword_1_0_or_HorizontalKeyword_1_1.equals(syntax))
				emit_Horizontal_HKeyword_1_0_or_HorizontalKeyword_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HyperLink_HyperlinkKeyword_1_0_or_WebpageKeyword_1_1.equals(syntax))
				emit_HyperLink_HyperlinkKeyword_1_0_or_WebpageKeyword_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Label_LabelKeyword_1_1_or_LblKeyword_1_0.equals(syntax))
				emit_Label_LabelKeyword_1_1_or_LblKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Neon_FunkyKeyword_1_1_or_NeonKeyword_1_0.equals(syntax))
				emit_Neon_FunkyKeyword_1_1_or_NeonKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TextField_TextfieldKeyword_1_1_or_TfKeyword_1_0.equals(syntax))
				emit_TextField_TextfieldKeyword_1_1_or_TfKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Vertical_VKeyword_1_0_or_VerticalKeyword_1_1.equals(syntax))
				emit_Vertical_VKeyword_1_0_or_VerticalKeyword_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     'btn' | 'button'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Button_BtnKeyword_1_0_or_ButtonKeyword_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ':'?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID 'alignment' (ambiguity) START elements+=Element
	 *     name=ID 'alignment' (ambiguity) align=Horizontal
	 *     name=ID 'alignment' (ambiguity) align=Vertical
	 */
	protected void emit_Container_ColonKeyword_3_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'Container' | 'container'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) name=ID
	 */
	protected void emit_Container_ContainerKeyword_1_0_or_ContainerKeyword_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'link to' | 'link' | '->'
	 *
	 * This ambiguous syntax occurs at:
	 *     type=Button (ambiguity) link=[Element|QualifiedName]
	 *     type=HyperLink (ambiguity) link=[Element|QualifiedName]
	 *     type=Label (ambiguity) link=[Element|QualifiedName]
	 *     type=TextField (ambiguity) link=[Element|QualifiedName]
	 */
	protected void emit_Element_HyphenMinusGreaterThanSignKeyword_6_0_2_or_LinkKeyword_6_0_1_or_LinkToKeyword_6_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'of type' | ('type' (':' | '=')?)
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) type=Button
	 *     name=ID (ambiguity) type=HyperLink
	 *     name=ID (ambiguity) type=Label
	 *     name=ID (ambiguity) type=TextField
	 */
	protected void emit_Element_OfTypeKeyword_4_0_or___TypeKeyword_4_1_0___ColonKeyword_4_1_1_0_or_EqualsSignKeyword_4_1_1_1__q__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (':' | '=')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'element' (ambiguity) name=ID
	 */
	protected void emit_Element___ColonKeyword_2_0_or_EqualsSignKeyword_2_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ':'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ('Title' | 'title') (ambiguity) title=STRING
	 */
	protected void emit_GUI_ColonKeyword_1_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'style:' | 'style' | 'style='
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) style=Style
	 *     title=STRING CLOSE (ambiguity) style=Style
	 */
	protected void emit_GUI_StyleKeyword_2_0_0_or_StyleKeyword_2_0_1_or_StyleKeyword_2_0_2(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'Title' | 'title'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ':'? title=STRING
	 */
	protected void emit_GUI_TitleKeyword_1_0_0_or_TitleKeyword_1_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'grey' | 'bland'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Grey_BlandKeyword_1_1_or_GreyKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'h' | 'horizontal'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Horizontal_HKeyword_1_0_or_HorizontalKeyword_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'hyperlink' | 'webpage'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_HyperLink_HyperlinkKeyword_1_0_or_WebpageKeyword_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'lbl' | 'label'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Label_LabelKeyword_1_1_or_LblKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'neon' | 'funky'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Neon_FunkyKeyword_1_1_or_NeonKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'tf' | 'textfield'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_TextField_TextfieldKeyword_1_1_or_TfKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'v' | 'vertical'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Vertical_VKeyword_1_0_or_VerticalKeyword_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
