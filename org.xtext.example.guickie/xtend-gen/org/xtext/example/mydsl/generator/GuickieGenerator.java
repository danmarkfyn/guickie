/**
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.example.mydsl.generator;

import com.google.common.base.Objects;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.xtext.example.mydsl.guickie.Container;
import org.xtext.example.mydsl.guickie.Element;
import org.xtext.example.mydsl.guickie.GUI;
import org.xtext.example.mydsl.guickie.Style;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class GuickieGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    final EObject gui = resource.getAllContents().next();
    final GUI guiClass = ((GUI) gui);
    fsa.generateFile("Guickie.html", this.compileGUI(guiClass));
    Style _style = guiClass.getStyle();
    boolean _notEquals = (!Objects.equal(_style, null));
    if (_notEquals) {
      final String style = guiClass.getStyle().getType().getClass().toString();
      fsa.generateFile("Style.css", this.compileStyle(style));
    }
  }
  
  public CharSequence compileStyle(final String style) {
    StringConcatenation _builder = new StringConcatenation();
    {
      boolean _equals = style.equals("class org.xtext.example.mydsl.guickie.impl.NeonImpl");
      if (_equals) {
        _builder.append("body {");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("background-color: lightblue;");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.newLine();
        _builder.append("p {");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("color: rgba(194, 91, 197);");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.newLine();
        _builder.append("button[type=button] {");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("background-color: rgb(74, 15, 88);");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("color: white;");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("padding: 2px 2px;");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("border: none;");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("cursor: pointer;");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("float: middle;");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("cursor: pointer;");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      } else {
        boolean _equals_1 = style.equals("class org.xtext.example.mydsl.guickie.impl.GreyImpl");
        if (_equals_1) {
          _builder.append("body {");
          _builder.newLine();
          _builder.append("    ");
          _builder.append("background-color: grey;");
          _builder.newLine();
          _builder.append("}");
          _builder.newLine();
          _builder.newLine();
          _builder.append("p {");
          _builder.newLine();
          _builder.append("    ");
          _builder.append("color: rgba(240, 240, 240);");
          _builder.newLine();
          _builder.append("}");
          _builder.newLine();
          _builder.newLine();
          _builder.append("button[type=button] {");
          _builder.newLine();
          _builder.append("    ");
          _builder.append("background-color: rgb(0, 0, 0);");
          _builder.newLine();
          _builder.append("    ");
          _builder.append("color: white;");
          _builder.newLine();
          _builder.append("    ");
          _builder.append("padding: 2px 2px;");
          _builder.newLine();
          _builder.append("    ");
          _builder.append("border: none;");
          _builder.newLine();
          _builder.append("    ");
          _builder.append("cursor: pointer;");
          _builder.newLine();
          _builder.append("    ");
          _builder.append("float: middle;");
          _builder.newLine();
          _builder.append("    ");
          _builder.append("cursor: pointer;");
          _builder.newLine();
          _builder.append("}");
          _builder.newLine();
        }
      }
    }
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence compileGUI(final GUI gui) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\t\t");
    _builder.append("<!-- Generated By Guickie -->");
    _builder.newLine();
    _builder.append("<!DOCTYPE html>");
    _builder.newLine();
    _builder.append("<html>");
    _builder.newLine();
    _builder.newLine();
    {
      Style _style = gui.getStyle();
      boolean _notEquals = (!Objects.equal(_style, null));
      if (_notEquals) {
        _builder.append("     ");
        _builder.append("<head>");
        _builder.newLine();
        _builder.append("<link rel=\"stylesheet\" href=\"Style.css\">");
        _builder.newLine();
      }
    }
    _builder.append("\t ");
    _builder.newLine();
    {
      String _title = gui.getTitle();
      boolean _notEquals_1 = (!Objects.equal(_title, null));
      if (_notEquals_1) {
        _builder.append("\t ");
        _builder.append("<title>");
        String _title_1 = gui.getTitle();
        _builder.append(_title_1, "\t ");
        _builder.append("</title>");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("<title>GUICKIE</title>");
        _builder.newLine();
        _builder.append("</head>");
        _builder.newLine();
        _builder.newLine();
      }
    }
    _builder.newLine();
    _builder.append("<body>");
    _builder.newLine();
    {
      EList<Container> _containers = gui.getContainers();
      for(final Container e : _containers) {
        _builder.append("\t");
        String _compileContainer = this.compileContainer(e);
        _builder.append(_compileContainer, "\t");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("</body>");
    _builder.newLine();
    _builder.append("</html>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    return _builder;
  }
  
  public String compileContainer(final Container con) {
    String output = "";
    String temp = "";
    String align = "";
    String _string = con.getAlign().getClass().toString();
    boolean _tripleNotEquals = (_string != null);
    if (_tripleNotEquals) {
      boolean _equals = con.getAlign().getClass().toString().equals("class org.xtext.example.mydsl.guickie.impl.VerticalImpl");
      if (_equals) {
        align = "tr";
      } else {
        boolean _equals_1 = con.getAlign().getClass().toString().equals("class org.xtext.example.mydsl.guickie.impl.HorizontalImpl");
        if (_equals_1) {
          align = "td";
        }
      }
    }
    EList<Element> _elements = con.getElements();
    for (final Element e : _elements) {
      {
        boolean _equals_2 = e.getType().getClass().toString().equals("class org.xtext.example.mydsl.guickie.impl.ButtonImpl");
        if (_equals_2) {
          Element _link = e.getLink();
          boolean _tripleNotEquals_1 = (_link != null);
          if (_tripleNotEquals_1) {
            boolean _equals_3 = e.getLink().getType().getClass().toString().equals("class org.xtext.example.mydsl.guickie.impl.TextFieldImpl");
            if (_equals_3) {
              String _name = e.getLink().getName();
              String _plus = ((((("<" + align) + ">") + "<button type=\"button\" onclick=\"document.getElementById(") + "\'") + _name);
              String _plus_1 = (_plus + "\'");
              String _plus_2 = (_plus_1 + ").value = ");
              String _plus_3 = (_plus_2 + "\'\'");
              String _plus_4 = (_plus_3 + "\">");
              String _plus_5 = (_plus_4 + "Clear ");
              String _string_1 = e.getLink().getName().toString();
              String _plus_6 = (_plus_5 + _string_1);
              String _plus_7 = (_plus_6 + "</button>");
              String _plus_8 = (_plus_7 + "</");
              String _plus_9 = (_plus_8 + align);
              String _plus_10 = (_plus_9 + ">");
              temp = _plus_10;
            } else {
              boolean _equals_4 = e.getLink().getType().getClass().toString().equals("class org.xtext.example.mydsl.guickie.impl.HyperLinkImpl");
              if (_equals_4) {
                String _name_1 = e.getLink().getName();
                String _plus_11 = ((((("<" + align) + ">") + "<button type=\"button\" onclick=\"document.getElementById(") + "\'") + _name_1);
                String _plus_12 = (_plus_11 + "\'");
                String _plus_13 = (_plus_12 + ").value = ");
                String _plus_14 = (_plus_13 + "\'\'");
                String _plus_15 = (_plus_14 + "\">");
                String _plus_16 = (_plus_15 + "Clear ");
                String _string_2 = e.getLink().getName().toString();
                String _plus_17 = (_plus_16 + _string_2);
                String _plus_18 = (_plus_17 + "</button>");
                String _plus_19 = (_plus_18 + "</");
                String _plus_20 = (_plus_19 + align);
                String _plus_21 = (_plus_20 + ">");
                temp = _plus_21;
              }
            }
          } else {
            String _string_3 = e.getName().toString();
            String _plus_22 = (((("<" + align) + ">") + "<button type=\"button\">") + _string_3);
            String _plus_23 = (_plus_22 + "</button>");
            String _plus_24 = (_plus_23 + "</");
            String _plus_25 = (_plus_24 + align);
            String _plus_26 = (_plus_25 + ">");
            temp = _plus_26;
          }
        } else {
          boolean _equals_5 = e.getType().getClass().toString().equals("class org.xtext.example.mydsl.guickie.impl.LabelImpl");
          if (_equals_5) {
            String _string_4 = e.getName().toString();
            String _plus_27 = (((("<" + align) + ">") + "<p>") + _string_4);
            String _plus_28 = (_plus_27 + "</p>");
            String _plus_29 = (_plus_28 + "</");
            String _plus_30 = (_plus_29 + align);
            String _plus_31 = (_plus_30 + ">");
            temp = _plus_31;
          } else {
            boolean _equals_6 = e.getType().getClass().toString().equals("class org.xtext.example.mydsl.guickie.impl.TextFieldImpl");
            if (_equals_6) {
              String _string_5 = e.getName().toString();
              String _plus_32 = (((("<" + align) + ">") + "<input type=\"text\" id=\"") + _string_5);
              String _plus_33 = (_plus_32 + "\" name=\"");
              String _string_6 = e.getName().toString();
              String _plus_34 = (_plus_33 + _string_6);
              String _plus_35 = (_plus_34 + "\">");
              String _plus_36 = (_plus_35 + "</");
              String _plus_37 = (_plus_36 + align);
              String _plus_38 = (_plus_37 + ">");
              temp = _plus_38;
            } else {
              boolean _equals_7 = e.getType().getClass().toString().equals("class org.xtext.example.mydsl.guickie.impl.HyperLinkImpl");
              if (_equals_7) {
                String _string_7 = e.getName().toString();
                String _plus_39 = (((("<" + align) + ">") + "<a href=\"https://www.") + _string_7);
                String _plus_40 = (_plus_39 + ".com\">");
                String _string_8 = e.getName().toString();
                String _plus_41 = (_plus_40 + _string_8);
                String _plus_42 = (_plus_41 + "</a>");
                String _plus_43 = (_plus_42 + "</");
                String _plus_44 = (_plus_43 + align);
                String _plus_45 = (_plus_44 + ">");
                temp = _plus_45;
              } else {
                boolean _equals_8 = e.getType().getClass().toString().equals("class org.xtext.example.mydsl.guickie.impl.ImageImpl");
                if (_equals_8) {
                  String _string_9 = e.getName().toString();
                  String _plus_46 = (((("<" + align) + ">") + "<a href=\"https://www.") + _string_9);
                  String _plus_47 = (_plus_46 + ".com\">");
                  String _string_10 = e.getName().toString();
                  String _plus_48 = (_plus_47 + _string_10);
                  String _plus_49 = (_plus_48 + "</a>");
                  String _plus_50 = (_plus_49 + "</");
                  String _plus_51 = (_plus_50 + align);
                  String _plus_52 = (_plus_51 + ">");
                  temp = _plus_52;
                }
              }
            }
          }
        }
        String _output = output;
        output = (_output + ("\n" + temp));
        temp = "";
      }
    }
    output = ((((("<table>" + "\n") + output) + "\n") + "</table>") + "\n");
    return output;
  }
}
